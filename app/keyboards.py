# app/keyboards.py
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)

def kb_main_private() -> ReplyKeyboardMarkup:
    """
    Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ –ª–∏—á–∫–µ: –æ–¥–Ω–∞ –±–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞,
    –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∏–Ω–ª–∞–π–Ω –Ω–µ –æ—Ç—Ä–∏—Å–æ–≤–∞–ª—Å—è.
    """
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üìã –í—ã–±—Ä–∞—Ç—å —Ç–µ—Å—Ç")]],
        resize_keyboard=True
    )

def kb_open_tests() -> InlineKeyboardMarkup:
    """
    –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞ –ø–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º / —Ñ–æ—Ç–æ.
    """
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìã –í—ã–±—Ä–∞—Ç—å —Ç–µ—Å—Ç", callback_data="open_tests")]
        ]
    )

def kb_for_question(options: list[str]) -> InlineKeyboardMarkup:
    """
    –î–≤–µ –∫–Ω–æ–ø–∫–∏-–æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ª—é–±–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    options: [text0, text1]
    """
    rows = [
        [InlineKeyboardButton(text=f"‚ë† {options[0]}", callback_data="opt_0")],
        [InlineKeyboardButton(text=f"‚ë° {options[1]}", callback_data="opt_1")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def kb_tests_list(items: list[tuple[str, str]]) -> InlineKeyboardMarkup:
    """
    –°–µ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ 2 –≤ —Ä—è–¥.
    items: [(id, title), ...]
    –í–Ω–∏–∑—É ‚Äî –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞.
    """
    rows = []
    row: list[InlineKeyboardButton] = []
    for tid, title in items:
        row.append(InlineKeyboardButton(text=title, callback_data=f"pick:{tid}"))
        if len(row) == 2:
            rows.append(row)
            row = []
    if row:
        rows.append(row)

    rows.append([InlineKeyboardButton(text="üîÅ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="open_tests")])
    return InlineKeyboardMarkup(inline_keyboard=rows)
